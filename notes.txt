function personFactory(name) {
  const object = {
    name,
    talk() {
      return `Hello I am  ${this.name}`;
    },
  };
  return object;
}

const me = personFactory("nico.");
console.log(me.talk());

const didi = personFactory("Didi Wu TinTin");
console.log(didi.talk());

const siggy = personFactory("Siggy");
console.log(siggy.talk());
// ---------------
// function creatElement (typeOfElement, textThatGoesInside, colorOfElement )
function creatElement(type, text, color) {
  const element = document.createElement(type);
  element.innerText = text;
  element.style.color = color;
  document.body.append(element);
  return {
    element,
    setText(text) {
      element.innerText = text;
    },
    setColor(color) {
      element.style.color = color;
    },
  };
}

const h1 = creatElement("h1", "Hello I am nico.", "white");
h1.setColor("black");
h1.setText("hello I am not nico anymore");
// Factory Function vs. Constructor vs. Class -

//Factory Function

function createPerson(name) {
  return {
    name,
    talk() {
      return `Hello my name is ${this.name}`;
    },
  };
}
const me = createPerson("nico.");
const didi = createPerson("Didi Wu TinTin");
const siggy = createPerson("Siggy");
console.log(me.talk());
console.log(didi.talk());
console.log(siggy.talk());

//Constructor
function Person(name) {
  this.name = name;
}

Person.prototype.talk = function () {
  return `Hello, I am ${this.name}`;
};

const milo = new Person("Milo");
console.log(milo.talk());

const cami = new Person("Camila");
console.log(cami.talk());

// classes are just constuctores